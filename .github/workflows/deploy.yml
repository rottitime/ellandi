name: Deploy

env:
  DOCKER_BUILDKIT: 1

on:
  push:
    # Publish `$SPACE` as Docker `latest` image.
    branches:
      - actions_refactor
      - sandbox
      - demo
      - develop

permissions:
  packages: write
  repository-projects: read
  id-token: write
  contents: read


jobs:
  get_space:
    runs-on: ubuntu-latest
    env:
      CF_SPACE: ${{ github.ref_name }}
    steps:
      - name: "Echo the Space"
        if: ${{ github.ref_name == 'sandbox' || github.ref_name == 'demo' || github.ref_name == 'develop' }}
        run: |
          echo "Deploying to space: $CF_SPACE"

  # push_images:
  #   runs-on: ubuntu-latest

  #   env:
  #     IMAGE_TAG: latest
  #     DOCKER_REPOSITORY: ghcr.io
  #     NODE_ENV: development
  #     CF_SPACE: ${{ github.ref_name }}
  #     NEXT_PUBLIC_API_URL: https://ellandi-api-$CF_SPACE.london.cloudapps.digital

  #   strategy:
  #     matrix:
  #       app: [ellandi-api, ellandi-web, organogram]
  #       include:
  #         - app: ellandi-api
  #           dockerfile: docker/api/Dockerfile
  #         - app: ellandi-web
  #           dockerfile: docker/web/Dockerfile
  #         - app: organogram
  #           dockerfile: docker/organogram/Dockerfile

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Build, tag, and push ${{ matrix.app }} image
  #       env:
  #         DOCKER_FILE: ${{ matrix.dockerfile }}
  #         DOCKER_IMAGE: ${{ matrix.app }}

  #       run: |
  #         docker build . --file $DOCKER_FILE --tag $DOCKER_REPOSITORY/${{ github.repository_owner }}/$DOCKER_IMAGE:$IMAGE_TAG --build-arg NODE_ENV=$NODE_ENV --build-arg NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL
  #         docker push -a $DOCKER_REPOSITORY/${{ github.repository_owner }}/$DOCKER_IMAGE

  # deploy_image:
  #   needs: [push_images]

  #   runs-on: ubuntu-latest

  #   env:
  #     IMAGE_TAG: latest
  #     DOCKER_REPOSITORY: ghcr.io
  #     CF_SPACE: ${{ github.ref_name }}

  #   strategy:
  #     matrix:
  #       app: [ellandi-api, ellandi-web, organogram]

  #   steps:
  #     - name: Donwload CF CLI
  #       run: curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v7&source=github" | tar -zx

  #     - name: CF login
  #       run: ./cf login -a api.london.cloud.service.gov.uk -u "${{ secrets.CF_USER }}" -p "${{ secrets.CF_PASSWORD }}" -o co-i-ai -s "$CF_SPACE"

  #     - name: CF push ${{ matrix.app }}
  #       env:
  #         CF_PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
  #         CF_PAT_TOKEN_USER: ${{ secrets.PAT_TOKEN_USER }}
  #         DOCKER_FILE: ${{ matrix.dockerfile }}
  #         DOCKER_IMAGE: ${{ matrix.app }}
  #       run: CF_DOCKER_PASSWORD="$CF_PAT_TOKEN" ./cf push "${{ matrix.app }}-$SPACE" --docker-image $DOCKER_REPOSITORY/${{ github.repository_owner }}/$DOCKER_IMAGE:$IMAGE_TAG --docker-username=$CF_PAT_TOKEN_USER
