version: '3'

volumes:
  local_postgres_data: {}

services:
  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    image: ellandi_api
    depends_on:
      - postgres
    env_file:
      - ./.envs/api
      - ./.envs/postgres
    volumes:
      - ./:/app/:z
    ports:
      - "8000:8000"

  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
      args:
        NODE_ENV: development
        NEXT_PUBLIC_API_URL: http://localhost:8000
    image: ellandi_web
    env_file:
      - ./.envs/web
    environment:
      - NODE_ENV
    ports:
      - "3000:3000"

  organogram:
    build:
      context: .
      dockerfile: ./docker/organogram/Dockerfile
    image: organogram
    depends_on:
      - postgres
    env_file:
      - ./.envs/organogram
      - ./.envs/postgres
    volumes:
      - ./:/app/:z
    ports:
      - "8000:8000"

  postgres:
    image: postgres:13
    container_name: ellandi_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
    env_file:
      - ./.envs/postgres
    ports:
      - "5432:5432"

  integration:
    build:
      context: .
      dockerfile: ./docker/integration/Dockerfile
    image: ellandi_integration
    depends_on:
      - web
    profiles:
      - testing

  tests:
    build:
      context: .
      dockerfile: ./docker/tests/Dockerfile
    image: ellandi_tests
    env_file:
      - ./.envs/tests
    profiles:
      - testing

  requirements:
    image: python:3.8-buster
    profiles:
      - utils
    volumes:
      - ./:/app/:z
