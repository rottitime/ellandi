version: '3'

volumes:
  organogram_postgres_data: {}
  ellandi_postgres_data: {}
  minio_data: {}

services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost/api
        NEXT_PUBLIC_ENABLE_EMAIL_VERIFY: 'false'
        API_HOST: http://api:8000
        RESOLVER: 127.0.0.11
    image: nginx_main
    depends_on:
      - api
    env_file:
      - ./envs/nginx
    ports:
      - "80:80"

  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
      args:
        GIT_SHA: ""
    image: ellandi_api
    depends_on:
      - ellandi-db
    env_file:
      - ./envs/api
    volumes:
      - ./:/app/:z
    ports:
      - "8000:8000"


  recommender:
    build:
      context: .
      dockerfile: ./docker/recommender/Dockerfile
      args:
        GIT_SHA: ""
    image: ellandi_recommender
    depends_on:
      - ellandi-db
    env_file:
      - ./envs/recommender
    volumes:
      - ./:/app/:z
    ports:
      - "8003:8003"


  organogram:
    build:
      context: .
      dockerfile: ./docker/organogram/Dockerfile
    image: organogram
    depends_on:
      - organogram-db
      - minio
    env_file:
      - ./envs/organogram
    volumes:
      - ./:/app/:z
    ports:
      - "8001:8001"

  ellandi-db:
    image: postgres:13
    container_name: ellandi_postgres
    volumes:
      - ellandi_postgres_data:/var/lib/postgresql/data:Z
    env_file:
      - ./envs/api
    expose:
      - "5432"

  organogram-db:
    image: postgres:13
    container_name: organogram_postgres
    volumes:
      - organogram_postgres_data:/var/lib/postgresql/data:Z
    env_file:
      - ./envs/organogram
    expose:
      - "5432"

  minio:
    image: minio/minio:RELEASE.2021-06-14T01-29-23Z
    container_name: organogram_minio
    volumes:
      - minio_data:/data
    env_file:
      - ./envs/minio
    ports:
      - "9000:9000"
    command: server /data

  tests-api:
    build:
      context: .
      dockerfile: ./docker/tests/Dockerfile
      args:
        APP: api
        MODULE: ellandi
    image: tests_api
    env_file:
      - ./envs/tests
    profiles:
      - testing
    depends_on:
      - ellandi-test-db

  tests-organogram:
    build:
      context: .
      dockerfile: ./docker/tests/Dockerfile
      args:
        APP: organogram
        MODULE: organogram
    image: tests_organogram
    env_file:
      - ./envs/tests
    profiles:
      - testing
    depends_on:
      - ellandi-test-db

  ellandi-test-db:
    image: postgres:13
    container_name: ellandi_test_postgres
    env_file:
      - ./envs/tests
    expose:
      - "5432"

  requirements:
    image: python:3.8-buster
    profiles:
      - utils
    volumes:
      - ./:/app/:z


  loadtests:
    build:
      context: .
      dockerfile: ./docker/artillery/Dockerfile
      args:
        TARGET: 'http://nginx'
    image: loadtests
    depends_on:
      - nginx
    command: run /artillery/artillery-nginx-playwright.yml
